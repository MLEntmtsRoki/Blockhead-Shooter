<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_gun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create

instance_create(mouse_x,mouse_y,cursor_target);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Steps
x = obj_Player.x;
y = obj_Player.y+4;

depth = obj_Player.depth - 1;
image_angle = point_direction(x,y,cursor_target.x,cursor_target.y);

// Image
//
if (obj_Player.image_xscale &gt; 0) {
    image_yscale = 1;
} else if (obj_Player.image_xscale &lt; 0) {
    image_yscale = -1;
}
//

// Animation
//
if (obj_Player.gun_shoot) {
    vfx_animate(spr_player_gun_shoot,0.4);
    if (image_index &gt;= 2) {
        instance_create(x + lengthdir_x(obj_Player.gun_len,image_angle),y + lengthdir_y(obj_Player.gun_len,image_angle),obj_bullet);
        
        with (obj_Player) {
            gun_ammo -= 1;
            
            gun_shoot = 0;
            gun_shoot_delay = 0;
        }
    }
} else if (obj_Player.gun_reload_isReloading) {
    obj_Player.gun_shoot_canShoot = 0;
    vfx_animate(spr_player_gun_reload,0.2);
    if (image_index &gt;= 3) {
        with (obj_Player) {
            if (gun_ammo &lt; gun_ammo_max) {
                gun_ammo += gun_reload_rate;
            } else if (gun_ammo &gt; gun_ammo_max) {
                gun_ammo -= gun_reload_rate;
            } else {
                gun_reload_isReloading = 0;
                gun_shoot_canShoot = 1;
            }
        }
    }
} else {
    vfx_animate(spr_player_gun,0);
}
//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
